class RoadmapResourcesModel {
  final String id;
  final String roadmapId;
  final int milestoneIndex;
  final List<dynamic> resources;
  final List<dynamic> certifications;
  final List<dynamic> networkGroups;
  final DateTime fetchedAt;
  final String jobSeekerId;

  const RoadmapResourcesModel({
    required this.id,
    required this.roadmapId,
    required this.milestoneIndex,
    required this.resources,
    required this.certifications,
    required this.networkGroups,
    required this.fetchedAt,
    required this.jobSeekerId,
  });

  factory RoadmapResourcesModel.fromJson(Map<String, dynamic> json) {
    return RoadmapResourcesModel(
      id: json['id'] as String,
      roadmapId: json['roadmap_id'] as String,
      milestoneIndex: json['milestone_index'] as int,
      resources: json['resources'] as List<dynamic>? ?? [],
      certifications: json['certifications'] as List<dynamic>? ?? [],
      networkGroups: json['network_groups'] as List<dynamic>? ?? [],
      fetchedAt: DateTime.parse(json['fetched_at'] as String),
      jobSeekerId: json['job_seeker_id'] as String,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'roadmap_id': roadmapId,
      'milestone_index': milestoneIndex,
      'resources': resources,
      'certifications': certifications,
      'network_groups': networkGroups,
      'fetched_at': fetchedAt.toIso8601String(),
      'job_seeker_id': jobSeekerId,
    };
  }

  /// Create a new roadmap resource for insert (without generated fields)
  Map<String, dynamic> toInsertJson() {
    return {
      'roadmap_id': roadmapId,
      'milestone_index': milestoneIndex,
      'resources': resources,
      'certifications': certifications,
      'network_groups': networkGroups,
      'job_seeker_id': jobSeekerId,
      // id and fetched_at are auto-generated by database
    };
  }

  /// Create a copy with updated fields
  RoadmapResourcesModel copyWith({
    String? id,
    String? roadmapId,
    int? milestoneIndex,
    List<dynamic>? resources,
    List<dynamic>? certifications,
    List<dynamic>? networkGroups,
    DateTime? fetchedAt,
    String? jobSeekerId,
  }) {
    return RoadmapResourcesModel(
      id: id ?? this.id,
      roadmapId: roadmapId ?? this.roadmapId,
      milestoneIndex: milestoneIndex ?? this.milestoneIndex,
      resources: resources ?? this.resources,
      certifications: certifications ?? this.certifications,
      networkGroups: networkGroups ?? this.networkGroups,
      fetchedAt: fetchedAt ?? this.fetchedAt,
      jobSeekerId: jobSeekerId ?? this.jobSeekerId,
    );
  }

  /// Helper getters for display
  String get formattedFetchedAt {
    final now = DateTime.now();
    final difference = now.difference(fetchedAt);

    if (difference.inDays > 0) {
      return '${difference.inDays} days ago';
    } else if (difference.inHours > 0) {
      return '${difference.inHours} hours ago';
    } else if (difference.inMinutes > 0) {
      return '${difference.inMinutes} minutes ago';
    } else {
      return 'Just now';
    }
  }

  bool get hasResources => resources.isNotEmpty;
  bool get hasCertifications => certifications.isNotEmpty;
  bool get hasNetworkGroups => networkGroups.isNotEmpty;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RoadmapResourcesModel &&
          runtimeType == other.runtimeType &&
          id == other.id;

  @override
  int get hashCode => id.hashCode;

  @override
  String toString() {
    return 'RoadmapResourcesModel{id: $id, roadmapId: $roadmapId, milestoneIndex: $milestoneIndex}';
  }
}
